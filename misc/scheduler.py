from aiogram import Bot
from datetime import datetime, time, timedelta
import asyncio
from database.models import User 

async def send_daily_message(bot: Bot):
    try:
        users = await User.all()
        
        for user in users:
            try:
                await bot.send_message(
                    chat_id=user.telegram_id,
                    text="üåû –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ:\n\n"
                         "‚Ä¢ üçé –ü–∏—Ç–∞–Ω–∏–µ\n"
                         "‚Ä¢ üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
                         "‚Ä¢ üìä –ó–∞–º–µ—Ä—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)\n\n"
                         "–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üí™"
                )
                await asyncio.sleep(0.1)
                
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}: {e}")
                continue
                
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ daily_message: {e}")

async def schedule_daily_messages(bot: Bot):
    while True:
        now = datetime.now()
        target_time = time(4, 0)  
        
        target_datetime = datetime.combine(now.date(), target_time)
        if now > target_datetime:
            target_datetime = datetime.combine(now.date() + timedelta(days=1), target_time)
        
        wait_seconds = (target_datetime - now).total_seconds()
        
        print(f"–°–ª–µ–¥—É—é—â–µ–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ {wait_seconds} —Å–µ–∫—É–Ω–¥")
        await asyncio.sleep(wait_seconds)
        
        await send_daily_message(bot)
from aiogram import Router, F
from aiogram.types import Message 
from aiogram.filters import Command
from keyboards.start import start_keyboard
from aiogram.fsm.context import FSMContext
from keyboards.quiz import SportQuiz, QuizStates


router = Router()

@router.message(Command('start'))
async def start_command(message: Message):
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n"
        "–¢—ã –ø–æ–ø–∞–ª –≤ –±–æ—Ç–∞ \"–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º—É –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é\"\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç üëá",
        reply_markup=start_keyboard()
    )





@router.message(F.text == "–ù–∞—á–∞—Ç—å")
async def start_quiz_handler(message: Message, state: FSMContext):
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–≤–∏–∑–∞
    quiz = SportQuiz()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–≤–∏–∑ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await state.update_data(quiz=quiz)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–≤–∏–∑–∞
    await state.set_state(QuizStates.in_quiz)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
    await message.answer(
        text=f"–í–æ–ø—Ä–æ—Å 1/{len(quiz.questions)}\n{quiz.questions[0]}",
        reply_markup=quiz.get_answer_keyboard(),
        parse_mode="Markdown"
    )    